/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.12
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LinkGeolinksInnerConditionsInner
 */
export interface LinkGeolinksInnerConditionsInner {
    /**
     * Type of the condition 
     * @type {string}
     * @memberof LinkGeolinksInnerConditionsInner
     */
    type?: LinkGeolinksInnerConditionsInnerTypeEnum;
    /**
     * Value for the given type. Allowed values depend on "type": e.g., "US", "DE", "FR" for type "country"; "en", "fr", "de" for type "language"; "Android", "iOS" for type "system".
     * @type {string}
     * @memberof LinkGeolinksInnerConditionsInner
     */
    value?: string;
    /**
     * Operator to apply for the condition
     * @type {string}
     * @memberof LinkGeolinksInnerConditionsInner
     */
    operator?: LinkGeolinksInnerConditionsInnerOperatorEnum;
}


/**
 * @export
 */
export const LinkGeolinksInnerConditionsInnerTypeEnum = {
    Country: 'country',
    Language: 'language',
    System: 'system'
} as const;
export type LinkGeolinksInnerConditionsInnerTypeEnum = typeof LinkGeolinksInnerConditionsInnerTypeEnum[keyof typeof LinkGeolinksInnerConditionsInnerTypeEnum];

/**
 * @export
 */
export const LinkGeolinksInnerConditionsInnerOperatorEnum = {
    And: 'AND',
    Or: 'OR'
} as const;
export type LinkGeolinksInnerConditionsInnerOperatorEnum = typeof LinkGeolinksInnerConditionsInnerOperatorEnum[keyof typeof LinkGeolinksInnerConditionsInnerOperatorEnum];


/**
 * Check if a given object implements the LinkGeolinksInnerConditionsInner interface.
 */
export function instanceOfLinkGeolinksInnerConditionsInner(value: object): value is LinkGeolinksInnerConditionsInner {
    return true;
}

export function LinkGeolinksInnerConditionsInnerFromJSON(json: any): LinkGeolinksInnerConditionsInner {
    return LinkGeolinksInnerConditionsInnerFromJSONTyped(json, false);
}

export function LinkGeolinksInnerConditionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkGeolinksInnerConditionsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'value': json['value'] == null ? undefined : json['value'],
        'operator': json['operator'] == null ? undefined : json['operator'],
    };
}

export function LinkGeolinksInnerConditionsInnerToJSON(json: any): LinkGeolinksInnerConditionsInner {
    return LinkGeolinksInnerConditionsInnerToJSONTyped(json, false);
}

export function LinkGeolinksInnerConditionsInnerToJSONTyped(value?: LinkGeolinksInnerConditionsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'value': value['value'],
        'operator': value['operator'],
    };
}

