/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.12
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Link } from './Link';
import {
    LinkFromJSON,
    LinkFromJSONTyped,
    LinkToJSON,
    LinkToJSONTyped,
} from './Link';

/**
 * 
 * @export
 * @interface ListLinks200Response
 */
export interface ListLinks200Response {
    /**
     * List of links
     * @type {Array<Link>}
     * @memberof ListLinks200Response
     */
    links?: Array<Link>;
    /**
     * Total number of links
     * @type {number}
     * @memberof ListLinks200Response
     */
    total?: number;
    /**
     * Number of items per page
     * @type {number}
     * @memberof ListLinks200Response
     */
    limit?: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof ListLinks200Response
     */
    pages?: number;
    /**
     * Current page number
     * @type {number}
     * @memberof ListLinks200Response
     */
    page?: number;
}

/**
 * Check if a given object implements the ListLinks200Response interface.
 */
export function instanceOfListLinks200Response(value: object): value is ListLinks200Response {
    return true;
}

export function ListLinks200ResponseFromJSON(json: any): ListLinks200Response {
    return ListLinks200ResponseFromJSONTyped(json, false);
}

export function ListLinks200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListLinks200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'links': json['links'] == null ? undefined : ((json['links'] as Array<any>).map(LinkFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'pages': json['pages'] == null ? undefined : json['pages'],
        'page': json['page'] == null ? undefined : json['page'],
    };
}

export function ListLinks200ResponseToJSON(json: any): ListLinks200Response {
    return ListLinks200ResponseToJSONTyped(json, false);
}

export function ListLinks200ResponseToJSONTyped(value?: ListLinks200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'links': value['links'] == null ? undefined : ((value['links'] as Array<any>).map(LinkToJSON)),
        'total': value['total'],
        'limit': value['limit'],
        'pages': value['pages'],
        'page': value['page'],
    };
}

