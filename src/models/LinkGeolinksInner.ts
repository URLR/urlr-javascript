/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.12
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkGeolinksInnerConditionsInner } from './LinkGeolinksInnerConditionsInner';
import {
    LinkGeolinksInnerConditionsInnerFromJSON,
    LinkGeolinksInnerConditionsInnerFromJSONTyped,
    LinkGeolinksInnerConditionsInnerToJSON,
    LinkGeolinksInnerConditionsInnerToJSONTyped,
} from './LinkGeolinksInnerConditionsInner';

/**
 * 
 * @export
 * @interface LinkGeolinksInner
 */
export interface LinkGeolinksInner {
    /**
     * Conditions for dynamic routing
     * @type {Array<LinkGeolinksInnerConditionsInner>}
     * @memberof LinkGeolinksInner
     */
    conditions?: Array<LinkGeolinksInnerConditionsInner>;
    /**
     * URL to redirect to when conditions match
     * @type {string}
     * @memberof LinkGeolinksInner
     */
    url?: string;
}

/**
 * Check if a given object implements the LinkGeolinksInner interface.
 */
export function instanceOfLinkGeolinksInner(value: object): value is LinkGeolinksInner {
    return true;
}

export function LinkGeolinksInnerFromJSON(json: any): LinkGeolinksInner {
    return LinkGeolinksInnerFromJSONTyped(json, false);
}

export function LinkGeolinksInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkGeolinksInner {
    if (json == null) {
        return json;
    }
    return {
        
        'conditions': json['conditions'] == null ? undefined : ((json['conditions'] as Array<any>).map(LinkGeolinksInnerConditionsInnerFromJSON)),
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function LinkGeolinksInnerToJSON(json: any): LinkGeolinksInner {
    return LinkGeolinksInnerToJSONTyped(json, false);
}

export function LinkGeolinksInnerToJSONTyped(value?: LinkGeolinksInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'conditions': value['conditions'] == null ? undefined : ((value['conditions'] as Array<any>).map(LinkGeolinksInnerConditionsInnerToJSON)),
        'url': value['url'],
    };
}

