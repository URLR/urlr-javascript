/* tslint:disable */
/* eslint-disable */
/**
 * Developer API - URLR
 * API powering the features of URLR.
 *
 * The version of the OpenAPI document: 0.3
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReduceLinkRequest
 */
export interface ReduceLinkRequest {
    /**
     * URL to shorten
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    url: string;
    /**
     * Team ID (displayed on dashboard)
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    team: string;
    /**
     * Folder ID (displayed on dashboard)
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    folder?: string;
    /**
     * Custom short code
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    code?: string;
    /**
     * Label
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    label?: string;
    /**
     * Password
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    password?: string;
    /**
     * Expiration date
     * @type {string}
     * @memberof ReduceLinkRequest
     */
    expiredAt?: string;
}

/**
 * Check if a given object implements the ReduceLinkRequest interface.
 */
export function instanceOfReduceLinkRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "team" in value;

    return isInstance;
}

export function ReduceLinkRequestFromJSON(json: any): ReduceLinkRequest {
    return ReduceLinkRequestFromJSONTyped(json, false);
}

export function ReduceLinkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReduceLinkRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': json['url'],
        'team': json['team'],
        'folder': !exists(json, 'folder') ? undefined : json['folder'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'expiredAt': !exists(json, 'expired_at') ? undefined : json['expired_at'],
    };
}

export function ReduceLinkRequestToJSON(value?: ReduceLinkRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'team': value.team,
        'folder': value.folder,
        'code': value.code,
        'label': value.label,
        'password': value.password,
        'expired_at': value.expiredAt,
    };
}

