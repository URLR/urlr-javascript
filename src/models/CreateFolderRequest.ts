/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.12
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateFolderRequest
 */
export interface CreateFolderRequest {
    /**
     * Team API ID
     * @type {string}
     * @memberof CreateFolderRequest
     */
    teamId: string;
    /**
     * Name
     * @type {string}
     * @memberof CreateFolderRequest
     */
    name: string;
    /**
     * Folder API ID (if any)
     * @type {string}
     * @memberof CreateFolderRequest
     */
    parentId?: string;
    /**
     * Color of folder
     * @type {string}
     * @memberof CreateFolderRequest
     */
    color?: CreateFolderRequestColorEnum;
}


/**
 * @export
 */
export const CreateFolderRequestColorEnum = {
    Blue: 'blue',
    Green: 'green',
    Orange: 'orange',
    Purple: 'purple',
    Red: 'red',
    Rose: 'rose',
    Yellow: 'yellow',
    Black: 'black'
} as const;
export type CreateFolderRequestColorEnum = typeof CreateFolderRequestColorEnum[keyof typeof CreateFolderRequestColorEnum];


/**
 * Check if a given object implements the CreateFolderRequest interface.
 */
export function instanceOfCreateFolderRequest(value: object): value is CreateFolderRequest {
    if (!('teamId' in value) || value['teamId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateFolderRequestFromJSON(json: any): CreateFolderRequest {
    return CreateFolderRequestFromJSONTyped(json, false);
}

export function CreateFolderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFolderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'teamId': json['team_id'],
        'name': json['name'],
        'parentId': json['parent_id'] == null ? undefined : json['parent_id'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function CreateFolderRequestToJSON(json: any): CreateFolderRequest {
    return CreateFolderRequestToJSONTyped(json, false);
}

export function CreateFolderRequestToJSONTyped(value?: CreateFolderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'team_id': value['teamId'],
        'name': value['name'],
        'parent_id': value['parentId'],
        'color': value['color'],
    };
}

