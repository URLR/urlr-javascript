/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateLinkRequest
 */
export interface CreateLinkRequest {
    /**
     * URL to shorten
     * @type {string}
     * @memberof CreateLinkRequest
     */
    url: string;
    /**
     * Team API ID
     * @type {string}
     * @memberof CreateLinkRequest
     */
    teamId: string;
    /**
     * Folder API ID
     * @type {string}
     * @memberof CreateLinkRequest
     */
    folderId?: string;
    /**
     * Custom short code
     * @type {string}
     * @memberof CreateLinkRequest
     */
    code?: string;
    /**
     * Label
     * @type {string}
     * @memberof CreateLinkRequest
     */
    label?: string;
    /**
     * Password
     * @type {string}
     * @memberof CreateLinkRequest
     */
    password?: string;
    /**
     * Expiration date
     * @type {Date}
     * @memberof CreateLinkRequest
     */
    expiredAt?: Date;
}

/**
 * Check if a given object implements the CreateLinkRequest interface.
 */
export function instanceOfCreateLinkRequest(value: object): value is CreateLinkRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('teamId' in value) || value['teamId'] === undefined) return false;
    return true;
}

export function CreateLinkRequestFromJSON(json: any): CreateLinkRequest {
    return CreateLinkRequestFromJSONTyped(json, false);
}

export function CreateLinkRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLinkRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'teamId': json['team_id'],
        'folderId': json['folder_id'] == null ? undefined : json['folder_id'],
        'code': json['code'] == null ? undefined : json['code'],
        'label': json['label'] == null ? undefined : json['label'],
        'password': json['password'] == null ? undefined : json['password'],
        'expiredAt': json['expired_at'] == null ? undefined : (new Date(json['expired_at'])),
    };
}

export function CreateLinkRequestToJSON(value?: CreateLinkRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'url': value['url'],
        'team_id': value['teamId'],
        'folder_id': value['folderId'],
        'code': value['code'],
        'label': value['label'],
        'password': value['password'],
        'expired_at': value['expiredAt'] == null ? undefined : ((value['expiredAt']).toISOString()),
    };
}

