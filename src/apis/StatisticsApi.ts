/* tslint:disable */
/* eslint-disable */
/**
 * URLR API Reference
 * API powering the features of URLR.<br><br>Note that in order to facilitate integration, we provide SDKs for various languages at https://github.com/URLR.<br><br>Key API principles:<br>         <ul><li>All dates follow **ISO-8601** format</li><li>Most errors follow **RFC 9457** standard</li><li>All responses are delivered in English</li></ul>
 *
 * The version of the OpenAPI document: 1.10
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetLink401Response,
  GetLink404Response,
  GetLink422Response,
  GetStatistics200Response,
  GetStatisticsRequest,
} from '../models/index';
import {
    GetLink401ResponseFromJSON,
    GetLink401ResponseToJSON,
    GetLink404ResponseFromJSON,
    GetLink404ResponseToJSON,
    GetLink422ResponseFromJSON,
    GetLink422ResponseToJSON,
    GetStatistics200ResponseFromJSON,
    GetStatistics200ResponseToJSON,
    GetStatisticsRequestFromJSON,
    GetStatisticsRequestToJSON,
} from '../models/index';

export interface GetStatisticsOperationRequest {
    getStatisticsRequest?: GetStatisticsRequest;
}

/**
 * 
 */
export class StatisticsApi extends runtime.BaseAPI {

    /**
     * Get statistics of a link
     */
    async getStatisticsRaw(requestParameters: GetStatisticsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetStatistics200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/statistics`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetStatisticsRequestToJSON(requestParameters['getStatisticsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetStatistics200ResponseFromJSON(jsonValue));
    }

    /**
     * Get statistics of a link
     */
    async getStatistics(requestParameters: GetStatisticsOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetStatistics200Response> {
        const response = await this.getStatisticsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
