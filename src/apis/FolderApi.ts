/* tslint:disable */
/* eslint-disable */
/**
 * Developer API - URLR
 * API powering the features of URLR.
 *
 * The version of the OpenAPI document: 0.3
 * Contact: contact@urlr.me
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Folder200Response,
  FolderRequest,
} from '../models/index';
import {
    Folder200ResponseFromJSON,
    Folder200ResponseToJSON,
    FolderRequestFromJSON,
    FolderRequestToJSON,
} from '../models/index';

export interface FolderOperationRequest {
    folderRequest?: FolderRequest;
}

/**
 * 
 */
export class FolderApi extends runtime.BaseAPI {

    /**
     * Get folders of team
     */
    async folderRaw(requestParameters: FolderOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Folder200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/folder`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: FolderRequestToJSON(requestParameters.folderRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => Folder200ResponseFromJSON(jsonValue));
    }

    /**
     * Get folders of team
     */
    async folder(requestParameters: FolderOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Folder200Response> {
        const response = await this.folderRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
